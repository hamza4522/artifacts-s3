name: deploy
on:
  push:
    branches:
       - master
       - develop
       - '[0-9][0-9][0-9][0-9].[0-9x]'
  pull_request:
   branches:
     - master
     - develop
     - '[0-9][0-9][0-9][0-9].[0-9x]'
   types:
     - closed  
 
  workflow_dispatch:   
env:
  S3_BUCKET: test-prd-hamza
  branch_name: ${{ github.head_ref }}
  OBJECT_PREFIX: code
  S3_BUCKET_PREFIX: "${S3_BUCKET}/${OBJECT_PREFIX}"
  CODE_TYPE: scala
  SOURCE_FILETYPE: zip    

jobs:
  build_test:
    if: ${{ github.event_name == 'push' && contains('${{ env.branch_name }}', '.')}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v11
      - name: Compile
        run: sbt compile
      - run: echo build job will be added later
  build:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v11
      - name: Compile
        run: sbt compile
      - run: echo build job will be added later
  post_build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      - name: Prepare package
        run: |
          mv *.zip "${GITHUB_SHA}.zip"
      - name: Prepare artifact location and link before uploading
        run: |
          # get repository name
          REPO_NAME="$(basename ${{ github.repository }})"
          # prepare artifact location and link
          HASH_DIR="s3://${S3_BUCKET_PREFIX}/${CODE_TYPE}/${REPO_NAME}/HASHES"
          DESTINATION_DIR="s3://${S3_BUCKET_PREFIX}/${CODE_TYPE}/${REPO_NAME}/${{ github.ref }}"
          DESTINATION_FILE="${HASH_DIR}/${{ github.sha }}.${SOURCE_FILETYPE}"
          DESTINATION_FILE_LATEST="${DESTINATION_DIR}/link-to-artifact"
          # Make available to environment
          echo "HASH_DIR=${HASH_DIR}" >> $GITHUB_ENV
          echo "DESTINATION_DIR=${DESTINATION_DIR}" >> $GITHUB_ENV
          echo "DESTINATION_FILE=${DESTINATION_FILE}" >> $GITHUB_ENV
          echo "DESTINATION_FILE_LATEST=${DESTINATION_FILE_LATEST}" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload artifact to S3
        run: |
          aws s3 cp ${GITHUB_SHA}.${{ env.SOURCE_FILETYPE }} ${{ env.HASH_DIR }}/ --acl bucket-owner-full-control
      - name: Prepare latest link for artifact
        run: |
          echo "${GITHUB_SHA}.${{ env.SOURCE_FILETYPE }}" > link-to-artifact
      - name: Upload latest link to artifact
        run: |
          aws s3 cp link-to-artifact ${{ env.DESTINATION_FILE_LATEST }} --acl bucket-owner-full-control
      
      
